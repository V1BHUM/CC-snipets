<snippet>
	<content><![CDATA[
class Sparse
{
public:
    int n;
    vector<vi> v;
    int m;
    int (*pred)(int,int);
 
    Sparse(vi ele,int (*func)(int,int))
    {
        n = ele.size();
        ll pt = 1;
        m = 0;
        while(pt<=n)
            pt*=2,m++;
        pt/=2,m--;
        v = vector<vi>(n,vector<int>(m+1));
        pred = func;
        forn(i,n)
        {
            v[i][0] = ele[i];
        }
    }
 
    void compute()
    {
        for(int j = 1;j<=m;j++)
        {
            //i +1<<j-1 < n
            //x + 1<<(j-1)  = i+1<<j
            for(int i = 0;i<n-(1<<j)+1;i++)
            {
                int a1 = v[i][j-1];
                int a2 = v[i+(1<<j)-(1<<(j-1))][j-1];
                v[i][j] = (*pred)(a1,a2);
            }
 
        }
    }
 
    int get(int i,int j)
    {
        return v[i][j];
    }
 
    int getRange(int l,int r)
    {
        if(l>r)
            swap(l,r);
        int len = r-l+1;
        int c = 0;
        ll pt = 1;
        while(pt<=len)
            pt*=2,c++;
        pt/=2,c--;
 
        return pred(v[l][c],v[r-pt+1][c]);
    }
};
 
int func(int a,int b)
{
    return max(a,b);
}

//Sparse s(vector,func);
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>sparse</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> 
</snippet>
